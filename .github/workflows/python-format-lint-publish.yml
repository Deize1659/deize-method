name: Python-Format-Lint-Test-Publish

env:
  POETRY_VIRTUALENVS_CREATE: true
  POETRY_VIRTUALENVS_IN_PROJECT: true

on:
  push:
    tags:
      - "*.*.*"
jobs:
  SetGlobalConstants:
    runs-on: ubuntu-22.04
    outputs:
      PYTHON_312_VERSION: 3.12
      PYTHON_313_VERSION: 3.13
      POETRY_VERSION: 2.0.1
      POETRY_DYNAMIC_VERSIONING_VERSION: 1.7.1
    steps:
      - run: echo 'Setting constants.'

  Build:
    runs-on: ubuntu-22.04
    needs: SetGlobalConstants
    strategy:
      matrix:
        python-version:
          [
            "${{ needs.SetGlobalConstants.outputs.PYTHON_312_VERSION }}",
            "${{ needs.SetGlobalConstants.outputs.PYTHON_313_VERSION }}",
          ]
        poetry-version:
          ["${{ needs.SetGlobalConstants.outputs.POETRY_VERSION }}"]
        poetry-dynamic-versioning-version:
          [
            "${{ needs.SetGlobalConstants.outputs.POETRY_DYNAMIC_VERSIONING_VERSION }}",
          ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry and Cache
        uses: ./.github/actions/cache-poetry
        with:
          python-version: ${{ matrix.python-version }}
          poetry-version: ${{ matrix.poetry-version }}
          poetry-dynamic-versioning-version: ${{ matrix.poetry-dynamic-versioning-version }}

      - name: Install dependencies and Cache
        uses: ./.github/actions/cache-packages
        with:
          python-version: ${{ matrix.python-version }}

  FormatLintCommit:
    needs: [Build, SetGlobalConstants]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version:
          [
            "${{ needs.SetGlobalConstants.outputs.PYTHON_312_VERSION }}",
            "${{ needs.SetGlobalConstants.outputs.PYTHON_313_VERSION }}",
          ]
        poetry-version:
          ["${{ needs.SetGlobalConstants.outputs.POETRY_VERSION }}"]
        poetry-dynamic-versioning-version:
          [
            "${{ needs.SetGlobalConstants.outputs.POETRY_DYNAMIC_VERSIONING_VERSION }}",
          ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry and Cache
        uses: ./.github/actions/cache-poetry
        with:
          python-version: ${{ matrix.python-version }}
          poetry-version: ${{ matrix.poetry-version }}
          poetry-dynamic-versioning-version: ${{ matrix.poetry-dynamic-versioning-version }}

      - name: Install dependencies and Cache
        uses: ./.github/actions/cache-packages
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run format
        run: |
          poetry run black tests src
          poetry run isort tests src

      - name: Run lint
        run: |
          poetry run flake8 tests src
          poetry run mypy tests src

      - name: Auto Commit
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Apply Code Formatter Change

  Publish:
    needs: [FormatLintCommit, SetGlobalConstants]
    runs-on: ubuntu-22.04
    environment:
      name: release
      url: https://pypi.org/p/deize-method
    permissions:
      id-token: write
    strategy:
      matrix:
        python-version:
          [
            "${{ needs.SetGlobalConstants.outputs.PYTHON_312_VERSION }}",
            "${{ needs.SetGlobalConstants.outputs.PYTHON_313_VERSION }}",
          ]
        poetry-version:
          ["${{ needs.SetGlobalConstants.outputs.POETRY_VERSION }}"]
        poetry-dynamic-versioning-version:
          [
            "${{ needs.SetGlobalConstants.outputs.POETRY_DYNAMIC_VERSIONING_VERSION }}",
          ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry and Cache
        uses: ./.github/actions/cache-poetry
        with:
          python-version: ${{ matrix.python-version }}
          poetry-version: ${{ matrix.poetry-version }}
          poetry-dynamic-versioning-version: ${{ matrix.poetry-dynamic-versioning-version }}

      - name: Install dependencies and Cache
        uses: ./.github/actions/cache-packages
        with:
          python-version: ${{ matrix.python-version }}

      - name: Poetry build
        run: |
          poetry build

      - name: Publish package distributions to testPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
